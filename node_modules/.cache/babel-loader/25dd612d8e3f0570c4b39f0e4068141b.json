{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a_kyl\\\\Documents\\\\GitHub\\\\8bitgalaxy\\\\src\\\\components\\\\ui\\\\CardView.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport cn from \"classnames\";\nimport { useDrag } from \"react-dnd\";\nimport SpecsView from \"./SpecsView\";\nimport usePosition from \"../../state/hooks/usePosition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardView = ({\n  card,\n  y,\n  x\n}) => {\n  _s();\n\n  var _card$Type, _card$Race;\n\n  const [p] = usePosition(y, x);\n  const [{\n    isDragging\n  }, dragRef] = useDrag(() => ({\n    type: \"CARD\",\n    item: {\n      card: card\n    },\n\n    end(item, monitor) {// const dropResult = monitor.getDropResult();\n      // if (!dropResult || !hasParent(item.card)) {\n      //   return undefined;\n      // }\n      // debugger\n      // const parent = getParent(item.card, 2);\n      // getParent(item.card, 2).remove(item.card);\n      // if (getType(parent).name === \"Pile\") {\n      //   parent.remove(item.card);\n      // }\n      // if (getType(parent).name === \"Star\") {\n      //   parent.remove(item.card);\n      // }\n    },\n\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n\n  const handleTurnOver = e => {\n    console.log(e);\n    console.log(card.visibility);\n    console.log(card); //   console.log(e.target.parentNode);\n    //   console.log(e.target.offsetParent);\n\n    card.turnOver();\n  };\n\n  const cardClasses = cn(\"Card\", card.visibility, (_card$Type = card.Type) !== null && _card$Type !== void 0 ? _card$Type : \"Ship\", (_card$Race = card.Race) !== null && _card$Race !== void 0 ? _card$Race : \"Neutral\");\n  const imageClasses = cn(\"Klass\", \"lni\", !card.isAbsent && !card.isTurned ? \"lni-\" + type2image(card.Specs.Type) : null);\n\n  if (card.isAbsent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cardClasses,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Name\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Value\",\n          children: card.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dragRef,\n    className: cardClasses,\n    onClick: handleTurnOver.bind(this),\n    style: {\n      left: 20 + p.x + \"px\",\n      top: 10 + p.y + \"px\",\n      border: isDragging ? \"2px solid red\" : \"none\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Image\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: imageClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Name\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Value\",\n        children: card.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), card.isVisible ? /*#__PURE__*/_jsxDEV(Specs, {\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardView, \"BF9m0oRL0xwVe9L2OYQAOF9Tfyk=\", false, function () {\n  return [usePosition, useDrag];\n});\n\n_c = CardView;\n\nfunction Specs({\n  card\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SpecsView, {\n      specs: card.Specs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), !card.isInserted && card.Alternative ? /*#__PURE__*/_jsxDEV(SpecsView, {\n      specs: card.Alternative,\n      isAlternative: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }, this) : \"\"]\n  }, void 0, true);\n}\n\n_c2 = Specs;\n\nfunction type2image(type) {\n  return TypeImages[type.toLowerCase()];\n}\n\nfunction race2image(race) {\n  return RaceImages[race.toLowerCase()];\n}\n\nconst TypeImages = Object.freeze({\n  hero: \"user\",\n  ship: \"rocket\",\n  base: \"codepen\",\n  colony: \"world\",\n  tech: \"react\"\n});\nconst RaceImages = Object.freeze({\n  plasma: \"emoji-smile\",\n  giant: \"bricks\",\n  ai: \"rook\",\n  human: \"world\"\n});\nexport default _c3 = observer(CardView);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CardView\");\n$RefreshReg$(_c2, \"Specs\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/components/ui/CardView.js"],"names":["React","observer","cn","useDrag","SpecsView","usePosition","CardView","card","y","x","p","isDragging","dragRef","type","item","end","monitor","collect","handleTurnOver","e","console","log","visibility","turnOver","cardClasses","Type","Race","imageClasses","isAbsent","isTurned","type2image","Specs","Name","bind","left","top","border","isVisible","isInserted","Alternative","TypeImages","toLowerCase","race2image","race","RaceImages","Object","freeze","hero","ship","base","colony","tech","plasma","giant","ai","human"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport cn from \"classnames\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport SpecsView from \"./SpecsView\";\r\nimport usePosition from \"../../state/hooks/usePosition\";\r\n\r\nconst CardView = ({card, y, x}) => {\r\n  const [p] = usePosition(y, x);\r\n  const [{isDragging}, dragRef] = useDrag(() => ({\r\n    type: \"CARD\",\r\n    item: {\r\n      card: card,\r\n    },\r\n    end(item, monitor) {\r\n      // const dropResult = monitor.getDropResult();\r\n      // if (!dropResult || !hasParent(item.card)) {\r\n      //   return undefined;\r\n      // }\r\n      // debugger\r\n      // const parent = getParent(item.card, 2);\r\n      // getParent(item.card, 2).remove(item.card);\r\n      // if (getType(parent).name === \"Pile\") {\r\n      //   parent.remove(item.card);\r\n      // }\r\n      // if (getType(parent).name === \"Star\") {\r\n      //   parent.remove(item.card);\r\n      // }\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n   const handleTurnOver = (e) => {\r\n     console.log(e)\r\n     console.log(card.visibility);\r\n     console.log(card);\r\n   //   console.log(e.target.parentNode);\r\n   //   console.log(e.target.offsetParent);\r\n    card.turnOver();\r\n  };\r\n  const cardClasses = cn(\r\n    \"Card\",\r\n    card.visibility,\r\n    card.Type ?? \"Ship\",\r\n    card.Race ?? \"Neutral\",\r\n  );\r\n  const imageClasses = cn(\r\n    \"Klass\",\r\n    \"lni\",\r\n    !card.isAbsent && !card.isTurned ? \"lni-\" + type2image(card.Specs.Type) : null,\r\n  );\r\n  if (card.isAbsent) {\r\n    return (\r\n      <div className={cardClasses}>\r\n        <div className=\"Name\">\r\n          <div className=\"Value\">{card.Name}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={dragRef}\r\n      className={cardClasses}\r\n      onClick={handleTurnOver.bind(this)}\r\n      style={{left: 20 + p.x + \"px\", top: 10 + p.y + \"px\", border: isDragging ? \"2px solid red\" : \"none\"}}\r\n    >\r\n      <div className=\"Image\">\r\n        <div className={imageClasses}/>\r\n      </div>\r\n      <div className=\"Name\">\r\n        <div className=\"Value\">{card.Name}</div>\r\n      </div>\r\n      {card.isVisible ? <Specs card={card}/> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Specs({card}) {\r\n  return (\r\n    <>\r\n      <SpecsView specs={card.Specs}/>\r\n      {(!card.isInserted && card.Alternative) ? <SpecsView specs={card.Alternative} isAlternative={true}/> : \"\"}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction type2image(type) {\r\n  return TypeImages[type.toLowerCase()];\r\n}\r\n\r\nfunction race2image(race) {\r\n  return RaceImages[race.toLowerCase()];\r\n}\r\n\r\nconst TypeImages = Object.freeze({\r\n  hero: \"user\",\r\n  ship: \"rocket\",\r\n  base: \"codepen\",\r\n  colony: \"world\",\r\n  tech: \"react\",\r\n});\r\n\r\nconst RaceImages = Object.freeze({\r\n  plasma: \"emoji-smile\",\r\n  giant: \"bricks\",\r\n  ai: \"rook\",\r\n  human: \"world\",\r\n});\r\n\r\nexport default observer(CardView);\r\n"]},"metadata":{},"sourceType":"module"}