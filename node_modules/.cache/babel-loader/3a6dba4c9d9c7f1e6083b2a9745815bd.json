{"ast":null,"code":"import Card from \"./Card.js\";\nimport Direction from \"./Direction.js\";\n\nclass Pile {\n  constructor(type, direction) {\n    this._type = type;\n    this._direction = Direction.assert(direction);\n    this.absentCard = Card.assert('absent ' + type);\n    this._cards = [];\n  }\n\n  get cards() {\n    return this._cards[this.size - 1] ? this._cards : [this.absentCard];\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  get type() {\n    return this._type;\n  }\n\n  get size() {\n    return this._cards.length;\n  }\n\n  get top() {\n    var _this$_cards;\n\n    return (_this$_cards = this._cards[this.size - 1]) !== null && _this$_cards !== void 0 ? _this$_cards : this.absentCard;\n  }\n\n  get(i) {\n    var _this$_cards$i;\n\n    return (_this$_cards$i = this._cards[i]) !== null && _this$_cards$i !== void 0 ? _this$_cards$i : i === 0 ? this.top : null;\n  }\n\n  removeCard(card) {\n    return this._cards.reduce((acc, c, index) => {\n      // if(card===c && this._cards.length > 1){\n      //    acc.splice(-1,1)\n      // } \n      // else if(card===c && this._cards.length === 1){\n      //    // acc[index]=this.absentCard\n      //    acc.splice(-1,1,this.absentCard)\n      // } \n      if (card === c && acc.length > 1) {\n        acc.splice(-1, 1);\n      } // else if(card===c && acc.length === 1 ) {\n      //    acc.splice(-1,1)\n      //    return acc=this.absentCard\n      // }\n      else if (card === c && acc.length === 1 && acc.includes(this.absentCard)) {\n          acc.splice(-1, 1);\n        } //  if(acc.length>2) {\n      //    if(card===c) {return this.absentCard}\n      //  }\n      // if(card===c) {acc.splice(-1,1)}\n      // if(card===c && this.size>1) {\n      //    acc.pop();\n      //    // return this.absentCard;\n      //    // console.log(this.absentCard)\n      // } else if(card===c && this.size===1) {\n      //    // acc.pop();\n      //    // acc.push(this.absentCard);\n      //    console.log('2',this.size, acc.length)\n      //    // acc[index]=this.absentCard\n      //    acc.splice(-1,1,this.absentCard)\n      // }\n\n\n      return acc;\n    }, this._cards);\n  } //   removeCard(card) {return this._cards.map((c) => {\n  //   if(c===card) {\n  //      this._cards.pop();\n  //    }\n  //    //   return this._cards\n  //   })}\n\n\n  putUnder(card) {\n    this._cards.unshift(Card.assert(card));\n  }\n\n  put(card) {\n    this._cards.push(Card.assert(card, this));\n  }\n\n}\n\nexport default Pile;","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/Model/Pile.js"],"names":["Card","Direction","Pile","constructor","type","direction","_type","_direction","assert","absentCard","_cards","cards","size","length","top","get","i","removeCard","card","reduce","acc","c","index","splice","includes","putUnder","unshift","put","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAGA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkB;AAC3B,SAAKC,KAAL,GAAaF,IAAb;AACA,SAAKG,UAAL,GAAkBN,SAAS,CAACO,MAAV,CAAiBH,SAAjB,CAAlB;AACA,SAAKI,UAAL,GAAkBT,IAAI,CAACQ,MAAL,CAAY,YAAUJ,IAAtB,CAAlB;AACA,SAAKM,MAAL,GAAc,EAAd;AACD;;AAEQ,MAALC,KAAK,GAAO;AACd,WAAO,KAAKD,MAAL,CAAY,KAAKE,IAAL,GAAY,CAAxB,IAA6B,KAAKF,MAAlC,GAA2C,CAAC,KAAKD,UAAN,CAAlD;AACD;;AACY,MAATJ,SAAS,GAAG;AAAE,WAAO,KAAKE,UAAZ;AAAyB;;AACnC,MAAJH,IAAI,GAAQ;AAAE,WAAO,KAAKE,KAAZ;AAAoB;;AAC9B,MAAJM,IAAI,GAAQ;AAAE,WAAO,KAAKF,MAAL,CAAYG,MAAnB;AAA4B;;AACvC,MAAHC,GAAG,GAAS;AAAA;;AAAE,2BAAO,KAAKJ,MAAL,CAAY,KAAKE,IAAL,GAAU,CAAtB,CAAP,uDAAmC,KAAKH,UAAxC;AAAqD;;AAEvEM,EAAAA,GAAG,CAACC,CAAD,EAAa;AAAA;;AAAE,6BAAO,KAAKN,MAAL,CAAYM,CAAZ,CAAP,2DAA0BA,CAAC,KAAG,CAAJ,GAAQ,KAAKF,GAAb,GAAmB,IAA7C;AAAqD;;AAEvEG,EAAAA,UAAU,CAACC,IAAD,EAAO;AAAC,WAAO,KAAKR,MAAL,CAAYS,MAAZ,CAAmB,CAACC,GAAD,EAAMC,CAAN,EAASC,KAAT,KAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAGJ,IAAI,KAAGG,CAAP,IAAYD,GAAG,CAACP,MAAJ,GAAa,CAA5B,EAA8B;AAC3BO,QAAAA,GAAG,CAACG,MAAJ,CAAW,CAAC,CAAZ,EAAc,CAAd;AACF,OAFD,CAGA;AACA;AACA;AACA;AANA,WAOK,IAAGL,IAAI,KAAGG,CAAP,IAAYD,GAAG,CAACP,MAAJ,KAAe,CAA3B,IAAgCO,GAAG,CAACI,QAAJ,CAAa,KAAKf,UAAlB,CAAnC,EAAkE;AACpEW,UAAAA,GAAG,CAACG,MAAJ,CAAW,CAAC,CAAZ,EAAc,CAAd;AACF,SAjB0D,CAmB/D;AACM;AACA;AACF;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,aAAOH,GAAP;AACD,KArCsB,EAqCpB,KAAKV,MArCe,CAAP;AAsCjB,GAxDQ,CA0DX;AACA;AACA;AACA;AACA;AACA;;;AAEEe,EAAAA,QAAQ,CAACP,IAAD,EAAQ;AAAE,SAAKR,MAAL,CAAYgB,OAAZ,CAAoB1B,IAAI,CAACQ,MAAL,CAAYU,IAAZ,CAApB;AAAyC;;AAC3DS,EAAAA,GAAG,CAACT,IAAD,EAAO;AAAE,SAAKR,MAAL,CAAYkB,IAAZ,CAAiB5B,IAAI,CAACQ,MAAL,CAAYU,IAAZ,EAAkB,IAAlB,CAAjB;AAA4C;;AAlE/C;;AAqEX,eAAehB,IAAf","sourcesContent":["import Card from \"./Card.js\";\r\nimport Direction from \"./Direction.js\";\r\n\r\n\r\nclass Pile {\r\n  constructor(type, direction) {\r\n    this._type = type;\r\n    this._direction = Direction.assert(direction);\r\n    this.absentCard = Card.assert('absent '+type);\r\n    this._cards = [];\r\n  }\r\n\r\n  get cards()     {\r\n    return this._cards[this.size - 1] ? this._cards : [this.absentCard];\r\n  }\r\n  get direction() { return this._direction; }\r\n  get type()      { return this._type; }\r\n  get size()      { return this._cards.length; }\r\n  get top()       { return this._cards[this.size-1] ?? this.absentCard; }\r\n\r\n  get(i)          { return this._cards[i] ?? (i===0 ? this.top : null); }\r\n\r\n  removeCard(card) {return this._cards.reduce((acc, c, index) => {\r\n      // if(card===c && this._cards.length > 1){\r\n      //    acc.splice(-1,1)\r\n      // } \r\n      // else if(card===c && this._cards.length === 1){\r\n      //    // acc[index]=this.absentCard\r\n      //    acc.splice(-1,1,this.absentCard)\r\n      // } \r\n      if(card===c && acc.length > 1){\r\n         acc.splice(-1,1)\r\n      } \r\n      // else if(card===c && acc.length === 1 ) {\r\n      //    acc.splice(-1,1)\r\n      //    return acc=this.absentCard\r\n      // }\r\n      else if(card===c && acc.length === 1 && acc.includes(this.absentCard)) {\r\n         acc.splice(-1,1)\r\n      }\r\n\r\n  //  if(acc.length>2) {\r\n        //    if(card===c) {return this.absentCard}\r\n        //  }\r\n      // if(card===c) {acc.splice(-1,1)}\r\n\r\n      // if(card===c && this.size>1) {\r\n      //    acc.pop();\r\n      //    // return this.absentCard;\r\n      //    // console.log(this.absentCard)\r\n      // } else if(card===c && this.size===1) {\r\n      //    // acc.pop();\r\n      //    // acc.push(this.absentCard);\r\n      //    console.log('2',this.size, acc.length)\r\n      //    // acc[index]=this.absentCard\r\n\r\n      //    acc.splice(-1,1,this.absentCard)\r\n      // }\r\n      return acc;\r\n    }, this._cards);\r\n  }\r\n\r\n//   removeCard(card) {return this._cards.map((c) => {\r\n//   if(c===card) {\r\n//      this._cards.pop();\r\n//    }\r\n//    //   return this._cards\r\n//   })}\r\n\r\n  putUnder(card)  { this._cards.unshift(Card.assert(card)); }\r\n  put(card) { this._cards.push(Card.assert(card, this)); }\r\n}\r\n\r\nexport default Pile;\r\n"]},"metadata":{},"sourceType":"module"}