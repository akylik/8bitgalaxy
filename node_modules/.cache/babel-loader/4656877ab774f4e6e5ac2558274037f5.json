{"ast":null,"code":"import Assert from \"./Assert.js\";\n\nclass Options {\n  constructor(options) {\n    this.init(options);\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get players() {\n    return this._players;\n  }\n\n  static assert(sample) {\n    if (!sample) {\n      return new Options({});\n    }\n\n    if (sample instanceof Object) {\n      return new Options(sample);\n    }\n\n    if (sample instanceof Options) {\n      return sample;\n    }\n\n    if (typeof sample === 'string') {\n      return Options.fromString(sample);\n    }\n\n    Assert.error('not an Options', sample);\n  }\n\n  static fromString(name) {\n    Assert.error('TODO implement');\n  }\n\n  init(options) {\n    var _options$players, _options$name;\n\n    this._players = (_options$players = options.players) !== null && _options$players !== void 0 ? _options$players : {\n      p1: 'human',\n      p2: 'ai'\n    };\n    this._name = (_options$name = options.name) !== null && _options$name !== void 0 ? _options$name : this.generateName();\n  }\n\n  generateName() {\n    return this.players.p1 + ' vs ' + this.players.p2;\n  }\n\n}\n\nexport default Options;","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/Model/Options.js"],"names":["Assert","Options","constructor","options","init","name","_name","players","_players","assert","sample","Object","fromString","error","p1","p2","generateName"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,IAAL,CAAUD,OAAV;AACD;;AAEO,MAAJE,IAAI,GAAG;AAAE,WAAO,KAAKC,KAAZ;AAAoB;;AACtB,MAAPC,OAAO,GAAG;AAAE,WAAO,KAAKC,QAAZ;AAAuB;;AAE1B,SAANC,MAAM,CAACC,MAAD,EAAS;AACpB,QAAI,CAACA,MAAL,EAAa;AACX,aAAO,IAAIT,OAAJ,CAAY,EAAZ,CAAP;AACD;;AACD,QAAIS,MAAM,YAAYC,MAAtB,EAA+B;AAC7B,aAAO,IAAIV,OAAJ,CAAYS,MAAZ,CAAP;AACD;;AACD,QAAIA,MAAM,YAAYT,OAAtB,EAAgC;AAC9B,aAAOS,MAAP;AACD;;AACD,QAAI,OAAOA,MAAP,KAAmB,QAAvB,EAAiC;AAC/B,aAAOT,OAAO,CAACW,UAAR,CAAmBF,MAAnB,CAAP;AACD;;AACDV,IAAAA,MAAM,CAACa,KAAP,CAAa,gBAAb,EAA+BH,MAA/B;AACD;;AAEgB,SAAVE,UAAU,CAACP,IAAD,EAAO;AACtBL,IAAAA,MAAM,CAACa,KAAP,CAAa,gBAAb;AACD;;AAEDT,EAAAA,IAAI,CAACD,OAAD,EAAU;AAAA;;AACZ,SAAKK,QAAL,uBAAgBL,OAAO,CAACI,OAAxB,+DAAmC;AACjCO,MAAAA,EAAE,EAAE,OAD6B;AAEjCC,MAAAA,EAAE,EAAE;AAF6B,KAAnC;AAIA,SAAKT,KAAL,oBAAaH,OAAO,CAACE,IAArB,yDAA6B,KAAKW,YAAL,EAA7B;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKT,OAAL,CAAaO,EAAb,GAAkB,MAAlB,GAA2B,KAAKP,OAAL,CAAaQ,EAA/C;AACD;;AAtCW;;AAyCd,eAAed,OAAf","sourcesContent":["import Assert from \"./Assert.js\";\r\n\r\nclass Options {\r\n  constructor(options) {\r\n    this.init(options);\r\n  }\r\n\r\n  get name() { return this._name; }\r\n  get players() { return this._players; }\r\n\r\n  static assert(sample) {\r\n    if (!sample) {\r\n      return new Options({});\r\n    }\r\n    if (sample instanceof(Object)) {\r\n      return new Options(sample);\r\n    }\r\n    if (sample instanceof(Options)) {\r\n      return sample;\r\n    }\r\n    if (typeof(sample) === 'string') {\r\n      return Options.fromString(sample);\r\n    }\r\n    Assert.error('not an Options', sample);\r\n  }\r\n\r\n  static fromString(name) {\r\n    Assert.error('TODO implement');\r\n  }\r\n\r\n  init(options) {\r\n    this._players = options.players ?? {\r\n      p1: 'human',\r\n      p2: 'ai',\r\n    };\r\n    this._name = options.name ?? this.generateName();\r\n  }\r\n\r\n  generateName() {\r\n    return this.players.p1 + ' vs ' + this.players.p2;\r\n  }\r\n}\r\n\r\nexport default Options;\r\n"]},"metadata":{},"sourceType":"module"}