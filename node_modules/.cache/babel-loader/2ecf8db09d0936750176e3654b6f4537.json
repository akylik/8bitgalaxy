{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a_kyl\\\\Documents\\\\GitHub\\\\8bitgalaxy\\\\src\\\\components\\\\ui\\\\CardView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport cn from \"classnames\";\nimport { useDrag } from \"react-dnd\";\nimport SpecsView from \"./SpecsView\";\nimport usePosition from \"../../state/hooks/usePosition\";\nimport CardBoxView from \"../CardBox/CardBoxView\";\nimport useCardBox from \"../../state/hooks/useCardBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardView = ({\n  card,\n  y,\n  x\n}) => {\n  _s();\n\n  var _card$Type, _card$Race;\n\n  const addCardBox = useCardBox();\n  const [p] = usePosition(y, x);\n  const [{\n    isDragging\n  }, dragRef] = useDrag(() => ({\n    type: \"CARD\",\n    item: {\n      card: card\n    },\n\n    end(item, monitor) {// const dropResult = monitor.getDropResult();\n      // if (!dropResult || !hasParent(item.card)) {\n      //   return undefined;\n      // }\n      // debugger\n      // const parent = getParent(item.card, 2);\n      // getParent(item.card, 2).remove(item.card);\n      // if (getType(parent).name === \"Pile\") {\n      //   parent.remove(item.card);\n      // }\n      // if (getType(parent).name === \"Star\") {\n      //   parent.remove(item.card);\n      // }\n    },\n\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n\n  const handleTurnOver = () => {\n    card.turnOver();\n  };\n\n  const cardClasses = cn(\"Card\", card.visibility, (_card$Type = card.Type) !== null && _card$Type !== void 0 ? _card$Type : \"Ship\", (_card$Race = card.Race) !== null && _card$Race !== void 0 ? _card$Race : \"Neutral\");\n  const imageClasses = cn(\"Klass\", \"lni\", !card.isAbsent && !card.isTurned ? \"lni-\" + type2image(card.Specs.Type) : null);\n\n  if (card.isAbsent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cardClasses,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Name\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Value\",\n          children: card.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseOver: addCardBox.mouseOverCard,\n    onMouseLeave: addCardBox.mouseLeaveCard,\n    onMouseDown: addCardBox.mouseDownCard,\n    ref: dragRef,\n    className: cardClasses,\n    onClick: handleTurnOver.bind(this),\n    style: {\n      left: 20 + p.x + \"px\",\n      top: 10 + p.y + \"px\",\n      border: isDragging ? \"2px solid red\" : \"none\"\n    },\n    children: [addCardBox.isFocusedCard && /*#__PURE__*/_jsxDEV(CardBoxView, {\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Image\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: imageClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Name\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Value\",\n        children: card.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), card.isVisible ? /*#__PURE__*/_jsxDEV(Specs, {\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardView, \"ktso7eqCEHImg+vyT8edeRC8SAs=\", false, function () {\n  return [useCardBox, usePosition, useDrag];\n});\n\n_c = CardView;\n\nfunction Specs({\n  card\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SpecsView, {\n      specs: card.Specs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !card.isInserted && card.Alternative ? /*#__PURE__*/_jsxDEV(SpecsView, {\n      specs: card.Alternative,\n      isAlternative: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true);\n}\n\n_c2 = Specs;\n\nfunction type2image(type) {\n  return TypeImages[type.toLowerCase()];\n}\n\nfunction race2image(race) {\n  return RaceImages[race.toLowerCase()];\n}\n\nconst TypeImages = Object.freeze({\n  hero: \"user\",\n  ship: \"rocket\",\n  base: \"codepen\",\n  colony: \"world\",\n  tech: \"react\"\n});\nconst RaceImages = Object.freeze({\n  plasma: \"emoji-smile\",\n  giant: \"bricks\",\n  ai: \"rook\",\n  human: \"world\"\n});\nexport default _c3 = observer(CardView);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CardView\");\n$RefreshReg$(_c2, \"Specs\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/components/ui/CardView.js"],"names":["React","useState","observer","cn","useDrag","SpecsView","usePosition","CardBoxView","useCardBox","CardView","card","y","x","addCardBox","p","isDragging","dragRef","type","item","end","monitor","collect","handleTurnOver","turnOver","cardClasses","visibility","Type","Race","imageClasses","isAbsent","isTurned","type2image","Specs","Name","mouseOverCard","mouseLeaveCard","mouseDownCard","bind","left","top","border","isFocusedCard","isVisible","isInserted","Alternative","TypeImages","toLowerCase","race2image","race","RaceImages","Object","freeze","hero","ship","base","colony","tech","plasma","giant","ai","human"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport cn from \"classnames\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport SpecsView from \"./SpecsView\";\r\nimport usePosition from \"../../state/hooks/usePosition\";\r\nimport CardBoxView from \"../CardBox/CardBoxView\";\r\nimport useCardBox from \"../../state/hooks/useCardBox\";\r\n\r\nconst CardView = ({ card, y, x }) => {\r\n  const addCardBox = useCardBox();\r\n  const [p] = usePosition(y, x);\r\n  const [{ isDragging }, dragRef] = useDrag(() => ({\r\n    type: \"CARD\",\r\n    item: {\r\n      card: card,\r\n    },\r\n    end(item, monitor) {\r\n      // const dropResult = monitor.getDropResult();\r\n      // if (!dropResult || !hasParent(item.card)) {\r\n      //   return undefined;\r\n      // }\r\n      // debugger\r\n      // const parent = getParent(item.card, 2);\r\n      // getParent(item.card, 2).remove(item.card);\r\n      // if (getType(parent).name === \"Pile\") {\r\n      //   parent.remove(item.card);\r\n      // }\r\n      // if (getType(parent).name === \"Star\") {\r\n      //   parent.remove(item.card);\r\n      // }\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n  const handleTurnOver = () => {\r\n    card.turnOver();\r\n  };\r\n  const cardClasses = cn(\r\n    \"Card\",\r\n    card.visibility,\r\n    card.Type ?? \"Ship\",\r\n    card.Race ?? \"Neutral\"\r\n  );\r\n  const imageClasses = cn(\r\n    \"Klass\",\r\n    \"lni\",\r\n    !card.isAbsent && !card.isTurned\r\n      ? \"lni-\" + type2image(card.Specs.Type)\r\n      : null\r\n  );\r\n  if (card.isAbsent) {\r\n    return (\r\n      <div className={cardClasses}>\r\n        <div className=\"Name\">\r\n          <div className=\"Value\">{card.Name}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseOver={addCardBox.mouseOverCard}\r\n      onMouseLeave={addCardBox.mouseLeaveCard}\r\n      onMouseDown={addCardBox.mouseDownCard}\r\n      ref={dragRef}\r\n      className={cardClasses}\r\n      onClick={handleTurnOver.bind(this)}\r\n      style={{\r\n        left: 20 + p.x + \"px\",\r\n        top: 10 + p.y + \"px\",\r\n        border: isDragging ? \"2px solid red\" : \"none\",\r\n      }}\r\n    >\r\n      {addCardBox.isFocusedCard && <CardBoxView card={card} />}\r\n\r\n      <div className=\"Image\">\r\n        <div className={imageClasses} />\r\n      </div>\r\n      <div className=\"Name\">\r\n        <div className=\"Value\">{card.Name}</div>\r\n      </div>\r\n      {card.isVisible ? <Specs card={card} /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Specs({ card }) {\r\n  return (\r\n    <>\r\n      <SpecsView specs={card.Specs} />\r\n      {!card.isInserted && card.Alternative ? (\r\n        <SpecsView specs={card.Alternative} isAlternative={true} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction type2image(type) {\r\n  return TypeImages[type.toLowerCase()];\r\n}\r\n\r\nfunction race2image(race) {\r\n  return RaceImages[race.toLowerCase()];\r\n}\r\n\r\nconst TypeImages = Object.freeze({\r\n  hero: \"user\",\r\n  ship: \"rocket\",\r\n  base: \"codepen\",\r\n  colony: \"world\",\r\n  tech: \"react\",\r\n});\r\n\r\nconst RaceImages = Object.freeze({\r\n  plasma: \"emoji-smile\",\r\n  giant: \"bricks\",\r\n  ai: \"rook\",\r\n  human: \"world\",\r\n});\r\n\r\nexport default observer(CardView);\r\n"]},"metadata":{},"sourceType":"module"}