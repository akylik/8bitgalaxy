{"ast":null,"code":"import Home from './Home.js';\nimport Assert from \"./Assert.js\";\nimport Direction from './Direction.js';\n\nclass Player {\n  constructor(name, race, direction, y, x) {\n    this._home = new Home(this);\n    this._name = name;\n    this._race = race;\n    this._direction = Direction.assert(direction);\n    this._y = y;\n    this._x = x;\n  }\n\n  get home() {\n    return this._home;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get race() {\n    return this._race;\n  }\n\n  get direction() {\n    return this._direction;\n  }\n\n  static assert(sample) {\n    if (sample instanceof Player) {\n      return sample;\n    }\n\n    Assert.error('not a Player', sample);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/Model/Player.js"],"names":["Home","Assert","Direction","Player","constructor","name","race","direction","y","x","_home","_name","_race","_direction","assert","_y","_x","home","sample","error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,MAAMC,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,IAAD,EAAOC,IAAP,EAAaC,SAAb,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AACvC,SAAKC,KAAL,GAAa,IAAIV,IAAJ,CAAS,IAAT,CAAb;AACA,SAAKW,KAAL,GAAaN,IAAb;AACA,SAAKO,KAAL,GAAaN,IAAb;AACA,SAAKO,UAAL,GAAkBX,SAAS,CAACY,MAAV,CAAiBP,SAAjB,CAAlB;AACA,SAAKQ,EAAL,GAAUP,CAAV;AACA,SAAKQ,EAAL,GAAUP,CAAV;AACD;;AAEO,MAAJQ,IAAI,GAAQ;AAAE,WAAO,KAAKP,KAAZ;AAAoB;;AAC9B,MAAJL,IAAI,GAAQ;AAAE,WAAO,KAAKM,KAAZ;AAAoB;;AAC9B,MAAJL,IAAI,GAAQ;AAAE,WAAO,KAAKM,KAAZ;AAAoB;;AACzB,MAATL,SAAS,GAAG;AAAE,WAAO,KAAKM,UAAZ;AAAyB;;AAE9B,SAANC,MAAM,CAACI,MAAD,EAAS;AACpB,QAAIA,MAAM,YAAYf,MAAtB,EAA+B;AAC7B,aAAOe,MAAP;AACD;;AACDjB,IAAAA,MAAM,CAACkB,KAAP,CAAa,cAAb,EAA6BD,MAA7B;AACD;;AApBU;;AAuBb,eAAef,MAAf","sourcesContent":["import Home from './Home.js';\r\nimport Assert from \"./Assert.js\";\r\nimport Direction from './Direction.js';\r\n\r\nclass Player {\r\n  constructor(name, race, direction, y, x) {\r\n    this._home = new Home(this);\r\n    this._name = name;\r\n    this._race = race;\r\n    this._direction = Direction.assert(direction);\r\n    this._y = y;\r\n    this._x = x;\r\n  }\r\n\r\n  get home()      { return this._home; }\r\n  get name()      { return this._name; }\r\n  get race()      { return this._race; }\r\n  get direction() { return this._direction; }\r\n\r\n  static assert(sample) {\r\n    if (sample instanceof(Player)) {\r\n      return sample;\r\n    }\r\n    Assert.error('not a Player', sample);\r\n  }\r\n}\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}