{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a_kyl\\\\Documents\\\\GitHub\\\\8bitgalaxy\\\\src\\\\components\\\\ui\\\\StarView.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport styled from \"styled-components\";\nimport usePosition from \"../../state/hooks/usePosition\";\nimport CardView from \"./CardView\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst View = styled.div`\n  left: ${({\n  left\n}) => left + \"px\"};\n  top: ${({\n  top\n}) => top + \"px\"};\n\n`;\n_c = View;\nconst OverView = styled.div`\n  border-color: ${({\n  isOver\n}) => isOver ? \"red\" : \"transparent\"};\n  border-width: 1px;\n  border-style: solid;\n\n  &:before, &:after {\n    border-color: ${({\n  isOver\n}) => isOver ? \"red\" : \"transparent\"};\n    border-width: 1px;\n    border-style: solid;\n  }\n`;\n_c2 = OverView;\n\nconst StarView = ({\n  star\n}) => {\n  _s();\n\n  const [, m] = usePosition();\n  const indent = star.y % 2 ? 0 : 7.75 * m;\n  const [{\n    isOver\n  }, dropRef] = useDrop(() => ({\n    accept: \"CARD\",\n    // drop: (item, monitor) => {\n    //   // let a = monitor.getItem();\n    //   // item.card.destination.removeCard(item.card);\n    //   // star.put(item.card, slot);\n    //   return {\n    //     place: star,\n    //     name: name,\n    //   };\n    // },\n    hover: (item, monitor) => {\n      console.log('Hover'); // isOver: !!monitor.isOver\n\n      console.log(isOver);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver\n    })\n  }), [star]); // const [{isOver}, dropRef] = useDrop(() => ({\n  //   accept: \"CARD\",\n  //   drop: (item, monitor) => {\n  //     // let a = monitor.getItem();\n  //     // const parent = getParent(item.card, 2);\n  //     // parent.remove(item.card);\n  //     // debugger\n  //     // star.put(item.card, name);\n  //     // item.card.destination.removeCard(item.card);\n  //     // star.put(item.card);\n  //     return {\n  //       place: star,\n  //     };\n  //   },\n  //   collect: monitor => ({\n  //     isOver: !!monitor.isOver(),\n  //   }),\n  // }), [star.x, star.y]);\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    ref: dropRef,\n    isOver: isOver,\n    className: \"Star\",\n    left: star.x * m * 15.5 + indent,\n    top: star.y * m * 13.4 + m,\n    style: true,\n    children: [/*#__PURE__*/_jsxDEV(OverView, {\n      className: \"hexagon\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner lni lni-sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.base(0),\n      y: 3,\n      x: 0,\n      slot: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.base(1),\n      y: 4,\n      x: 0,\n      slot: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.base(2),\n      y: 5,\n      x: 0,\n      slot: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(0),\n      y: 6,\n      x: 0,\n      slot: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(1),\n      y: 6,\n      x: 1,\n      slot: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(2),\n      y: 6,\n      x: 2,\n      slot: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(3),\n      y: 6,\n      x: 3,\n      slot: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.colony(0),\n      y: 3,\n      x: 8,\n      slot: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.colony(1),\n      y: 4,\n      x: 8,\n      slot: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.colony(2),\n      y: 5,\n      x: 8,\n      slot: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(0),\n      y: 7,\n      x: 7,\n      slot: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(1),\n      y: 8,\n      x: 7,\n      slot: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(2),\n      y: 9,\n      x: 7,\n      slot: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(3),\n      y: 10,\n      x: 7,\n      slot: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StarView, \"sOVeeMec0QKnqRUhSeHvCUL5FnU=\", false, function () {\n  return [usePosition, useDrop];\n});\n\n_c3 = StarView;\nconst CardViewer = observer(_c4 = ({\n  card,\n  y,\n  x,\n  slot\n}) => {\n  if (card.isAbsent) {\n    // return \"\";\n    return /*#__PURE__*/_jsxDEV(Slot, {\n      y: y,\n      x: x,\n      card: card,\n      slot: slot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CardView, {\n    card: card,\n    y: y,\n    x: x\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n});\n_c5 = CardViewer;\nconst SlotView = styled.div`\n  position: absolute;\n  border-width: 4px;\n  border-style: solid;\n  border-color: ${({\n  isOver\n}) => isOver ? \"white\" : \"transparent\"};\n  top: ${({\n  y\n}) => y + \"px\"};\n  left: ${({\n  x\n}) => x + \"px\"};\n  z-index: 2;\n  border-radius: 20px;\n  width: 300px;\n  height: 200px;\n`; // const Slot = observer(({name, star, y, x}) => {\n\n_c6 = SlotView;\nconst Slot = observer(_c7 = _s2(({\n  name,\n  star,\n  y,\n  x,\n  card,\n  slot\n}) => {\n  _s2();\n\n  // console.log(star.bases)\n  const [p] = usePosition(y, x);\n  const [{\n    isOver\n  }, dropRef] = useDrop(() => ({\n    accept: \"CARD\",\n    drop: (item, monitor) => {\n      let a = monitor.getItem(); // const parent = getParent(item.card, 2);\n      // parent.remove(item.card);\n      // debugger\n\n      item.card.destination.removeCard(item.card);\n      star.put(item.card, slot);\n      return {\n        place: star,\n        name: name\n      };\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }), [x, y]);\n  return /*#__PURE__*/_jsxDEV(SlotView, {\n    ref: dropRef,\n    className: card.Name,\n    y: p.y - 0,\n    x: 0 + p.x,\n    isOver: isOver\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this) //  <SlotView ref={dropRef} className={name} y={p.y - 94} x={18 + p.x} isOver={isOver} />\n  ;\n}, \"0Jmud9YATBFvj8LeIkcLgSpgwF8=\", false, function () {\n  return [usePosition, useDrop];\n}));\n_c8 = Slot;\nexport default _c9 = observer(StarView);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"OverView\");\n$RefreshReg$(_c3, \"StarView\");\n$RefreshReg$(_c4, \"CardViewer$observer\");\n$RefreshReg$(_c5, \"CardViewer\");\n$RefreshReg$(_c6, \"SlotView\");\n$RefreshReg$(_c7, \"Slot$observer\");\n$RefreshReg$(_c8, \"Slot\");\n$RefreshReg$(_c9, \"%default%\");","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/components/ui/StarView.js"],"names":["React","useDrop","styled","usePosition","CardView","observer","View","div","left","top","OverView","isOver","StarView","star","m","indent","y","dropRef","accept","hover","item","monitor","console","log","collect","x","base","ship","colony","hero","CardViewer","card","slot","isAbsent","SlotView","Slot","name","p","drop","a","getItem","destination","removeCard","put","place","Name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport styled from \"styled-components\";\r\nimport usePosition from \"../../state/hooks/usePosition\";\r\nimport CardView from \"./CardView\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst View = styled.div`\r\n  left: ${({left}) => left + \"px\"};\r\n  top: ${({top}) => top + \"px\"};\r\n\r\n`;\r\n\r\nconst OverView = styled.div`\r\n  border-color: ${({isOver}) => isOver ? \"red\" : \"transparent\"};\r\n  border-width: 1px;\r\n  border-style: solid;\r\n\r\n  &:before, &:after {\r\n    border-color: ${({isOver}) => isOver ? \"red\" : \"transparent\"};\r\n    border-width: 1px;\r\n    border-style: solid;\r\n  }\r\n`;\r\n\r\nconst StarView = ({star}) => {\r\n  const [, m] = usePosition();\r\n  const indent = star.y % 2 ? 0 : 7.75 * m;\r\n  const [{isOver}, dropRef] = useDrop(() =>({\r\n    accept: \"CARD\",\r\n    \r\n    // drop: (item, monitor) => {\r\n    //   // let a = monitor.getItem();\r\n    //   // item.card.destination.removeCard(item.card);\r\n    //   // star.put(item.card, slot);\r\n    //   return {\r\n    //     place: star,\r\n    //     name: name,\r\n    //   };\r\n    // },\r\n    \r\n    hover: (item, monitor) => {\r\n      console.log('Hover')\r\n      // isOver: !!monitor.isOver\r\n      console.log(isOver)\r\n    },\r\n\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver\r\n      \r\n    }),\r\n  }), [star]);\r\n\r\n   // const [{isOver}, dropRef] = useDrop(() => ({\r\n  //   accept: \"CARD\",\r\n  //   drop: (item, monitor) => {\r\n  //     // let a = monitor.getItem();\r\n  //     // const parent = getParent(item.card, 2);\r\n  //     // parent.remove(item.card);\r\n  //     // debugger\r\n  //     // star.put(item.card, name);\r\n\r\n  //     // item.card.destination.removeCard(item.card);\r\n  //     // star.put(item.card);\r\n  //     return {\r\n  //       place: star,\r\n  //     };\r\n  //   },\r\n  //   collect: monitor => ({\r\n  //     isOver: !!monitor.isOver(),\r\n  //   }),\r\n  // }), [star.x, star.y]);\r\n\r\n  return (\r\n    <View \r\n      ref={dropRef} \r\n      isOver={isOver} \r\n      className={\"Star\"} \r\n      left={star.x * m * 15.5 + indent} \r\n      top={star.y * m * 13.4 + m} \r\n      style\r\n      >\r\n      <OverView className=\"hexagon\" >\r\n        <span><div className=\"inner lni lni-sun\"/></span>\r\n        {/* <Slot name={'base'} star={star} y={2} x={0}/> */}\r\n        {/* <Slot name={'colony'} star={star} y={2} x={7}/>\r\n        <Slot name={'ship'} star={star} y={6} x={0}/>\r\n        <Slot name={'hero'} star={star} y={6} x={7}/> */}\r\n      </OverView>\r\n\r\n      <CardViewer card={star.base(0)} y={3} x={0} slot={0}/>\r\n      <CardViewer card={star.base(1)} y={4} x={0} slot={1}/>\r\n      <CardViewer card={star.base(2)} y={5} x={0} slot={2}/>\r\n\r\n      <CardViewer card={star.ship(0)} y={6} x={0} slot={0}/>\r\n      <CardViewer card={star.ship(1)} y={6} x={1} slot={1}/>\r\n      <CardViewer card={star.ship(2)} y={6} x={2} slot={2}/>\r\n      <CardViewer card={star.ship(3)} y={6} x={3} slot={3}/>\r\n\r\n      <CardViewer card={star.colony(0)} y={3} x={8} slot={0}/>\r\n      <CardViewer card={star.colony(1)} y={4} x={8} slot={1}/>\r\n      <CardViewer card={star.colony(2)} y={5} x={8} slot={2}/>\r\n\r\n      <CardViewer card={star.hero(0)} y={7} x={7} slot={0}/>\r\n      <CardViewer card={star.hero(1)} y={8} x={7} slot={1}/>\r\n      <CardViewer card={star.hero(2)} y={9} x={7} slot={2}/>\r\n      <CardViewer card={star.hero(3)} y={10} x={7} slot={3}/>\r\n      {/* <CardViewer card={star.base(0)} y={3} x={0} slot={0}/>\r\n      <CardViewer card={star.base(1)} y={4} x={0.5} slot={1}/>\r\n      <CardViewer card={star.base(2)} y={5} x={1} slot={2}/>\r\n\r\n      <CardViewer card={star.ship(0)} y={8} x={0} slot={0}/>\r\n      <CardViewer card={star.ship(1)} y={9} x={0.5} slot={1}/>\r\n      <CardViewer card={star.ship(2)} y={10} x={1} slot={2}/>\r\n      <CardViewer card={star.ship(3)} y={11} x={1.5} slot={3}/>\r\n\r\n      <CardViewer card={star.colony(0)} y={3} x={7} slot={0}/>\r\n      <CardViewer card={star.colony(1)} y={4} x={7.5} slot={1}/>\r\n      <CardViewer card={star.colony(2)} y={5} x={8} slot={2}/>\r\n\r\n      <CardViewer card={star.hero(0)} y={8} x={7} slot={0}/>\r\n      <CardViewer card={star.hero(1)} y={9} x={7.5} slot={1}/>\r\n      <CardViewer card={star.hero(2)} y={10} x={8} slot={2}/>\r\n      <CardViewer card={star.hero(3)} y={11} x={8.5} slot={3}/> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CardViewer = observer(({card, y, x, slot}) => {\r\n  if (card.isAbsent) {\r\n    // return \"\";\r\n    return(\r\n      <Slot y={y} x={x} card={card} slot={slot}></Slot>\r\n    ) ;\r\n  }\r\n\r\n  return (\r\n    <CardView card={card} y={y} x={x}/>\r\n  );\r\n});\r\n\r\nconst SlotView = styled.div`\r\n  position: absolute;\r\n  border-width: 4px;\r\n  border-style: solid;\r\n  border-color: ${({isOver}) => isOver ? \"white\" : \"transparent\"};\r\n  top: ${({y}) => y + \"px\"};\r\n  left: ${({x}) => x + \"px\"};\r\n  z-index: 2;\r\n  border-radius: 20px;\r\n  width: 300px;\r\n  height: 200px;\r\n`;\r\n\r\n// const Slot = observer(({name, star, y, x}) => {\r\nconst Slot = observer(({name, star, y, x, card, slot }) => {\r\n  // console.log(star.bases)\r\n  const [p] = usePosition(y, x);\r\n  const [{isOver}, dropRef] = useDrop(() => ({\r\n    accept: \"CARD\",\r\n    drop: (item, monitor) => {\r\n      let a = monitor.getItem();\r\n      // const parent = getParent(item.card, 2);\r\n      // parent.remove(item.card);\r\n      // debugger\r\n      item.card.destination.removeCard(item.card);\r\n      star.put(item.card, slot);\r\n\r\n      return {\r\n        place: star,\r\n        name: name,\r\n      };\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }), [x, y]);\r\n  \r\n  return (\r\n    <SlotView ref={dropRef} className={card.Name} y={p.y - 0} x={0 + p.x} isOver={isOver}/>\r\n   //  <SlotView ref={dropRef} className={name} y={p.y - 94} x={18 + p.x} isOver={isOver} />\r\n  );\r\n});\r\n\r\nexport default observer(StarView);\r\n"]},"metadata":{},"sourceType":"module"}