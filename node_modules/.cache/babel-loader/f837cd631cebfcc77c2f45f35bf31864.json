{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a_kyl\\\\Documents\\\\GitHub\\\\8bitgalaxy\\\\src\\\\components\\\\ui\\\\StarView.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport styled from \"styled-components\";\nimport usePosition from \"../../state/hooks/usePosition\";\nimport CardView from \"./CardView\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst View = styled.div`\n  left: ${({\n  left\n}) => left + \"px\"};\n  top: ${({\n  top\n}) => top + \"px\"};\n`;\n_c = View;\nconst OverView = styled.div`\n  border-color: ${({\n  isOver\n}) => isOver ? \"red\" : \"transparent\"};\n  border-width: 1px;\n  border-style: solid;\n\n  &:before, &:after {\n    border-color: ${({\n  isOver\n}) => isOver ? \"red\" : \"transparent\"};\n    border-width: 1px;\n    border-style: solid;\n  }\n`;\n_c2 = OverView;\n\nconst StarView = ({\n  star\n}) => {\n  _s();\n\n  // console.log(star.parent);\n  const parent = star.parent;\n  const [, m] = usePosition();\n  const indent = star.y % 2 ? 0 : 7.75 * m;\n  const [{\n    isOver\n  }, dropRef] = useDrop(() => ({\n    accept: \"CARD\",\n    drop: (item, monitor) => {\n      // let a = monitor.getItem();\n      // const parent = getParent(item.card, 2);\n      // parent.remove(item.card);\n      // debugger\n      // star.put(item.card, name);\n      return {\n        place: star\n      };\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }), [star.x, star.y]);\n  return /*#__PURE__*/_jsxDEV(View, {\n    ref: dropRef,\n    className: \"Star\",\n    left: star.x * m * 15.5 + indent,\n    top: star.y * m * 13.4 + m,\n    children: [/*#__PURE__*/_jsxDEV(OverView, {\n      className: \"hexagon\",\n      isOver: isOver,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner lni lni-sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.base(0),\n      y: 3,\n      x: 0,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.base(1),\n      y: 4,\n      x: 0,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.base(2),\n      y: 5,\n      x: 0,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(0),\n      y: 6,\n      x: 0,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(1),\n      y: 6,\n      x: 1,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(2),\n      y: 6,\n      x: 2,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.ship(3),\n      y: 6,\n      x: 2,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.colony(0),\n      y: 3,\n      x: 8,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.colony(1),\n      y: 4,\n      x: 8,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.colony(2),\n      y: 5,\n      x: 8,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(0),\n      y: 7,\n      x: 7,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(1),\n      y: 8,\n      x: 7,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(2),\n      y: 9,\n      x: 7,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardViewer, {\n      card: star.hero(3),\n      y: 10,\n      x: 7,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StarView, \"sOVeeMec0QKnqRUhSeHvCUL5FnU=\", false, function () {\n  return [usePosition, useDrop];\n});\n\n_c3 = StarView;\n\nconst CardViewer = ({\n  card,\n  y,\n  x,\n  parent\n}) => {\n  console.log(card);\n\n  if (card.isAbsent) {\n    return \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(CardView, {\n    card: card,\n    y: y,\n    x: x,\n    parent: parent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}; // const SlotView = styled.div`\n//   position: absolute;\n//   border-width: 2px;\n//   border-style: solid;\n//   border-color: ${({isOver}) => isOver ? \"red\" : \"transparent\"};\n//   top: ${({y}) => y + \"px\"};\n//   left: ${({x}) => x + \"px\"};\n//   z-index: 2;\n//   border-radius: 20px;\n// `;\n//\n// const Slot = ({name, star, y, x}) => {\n//   const [p] = usePosition(y, x);\n//   const [{isOver}, dropRef] = useDrop(() => ({\n//     accept: \"CARD\",\n//     drop: (item, monitor) => {\n//       let a = monitor.getItem();\n//       // const parent = getParent(item.card, 2);\n//       // parent.remove(item.card);\n//       // debugger\n//       // star.put(item.card, name);\n//\n//       return {\n//         place: star,\n//         name: name,\n//       };\n//     },\n//     collect: monitor => ({\n//       isOver: !!monitor.isOver(),\n//     }),\n//   }), [x, y]);\n//\n//   return (\n//     <SlotView ref={dropRef} className={name} y={p.y - 94} x={18 + p.x} isOver={isOver}/>\n//   );\n// };\n\n\n_c4 = CardViewer;\nexport default _c5 = observer(StarView);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"OverView\");\n$RefreshReg$(_c3, \"StarView\");\n$RefreshReg$(_c4, \"CardViewer\");\n$RefreshReg$(_c5, \"%default%\");","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/components/ui/StarView.js"],"names":["React","useDrop","styled","usePosition","CardView","observer","View","div","left","top","OverView","isOver","StarView","star","parent","m","indent","y","dropRef","accept","drop","item","monitor","place","collect","x","base","ship","colony","hero","CardViewer","card","console","log","isAbsent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport styled from \"styled-components\";\r\nimport usePosition from \"../../state/hooks/usePosition\";\r\nimport CardView from \"./CardView\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst View = styled.div`\r\n  left: ${({left}) => left + \"px\"};\r\n  top: ${({top}) => top + \"px\"};\r\n`;\r\n\r\nconst OverView = styled.div`\r\n  border-color: ${({isOver}) => isOver ? \"red\" : \"transparent\"};\r\n  border-width: 1px;\r\n  border-style: solid;\r\n\r\n  &:before, &:after {\r\n    border-color: ${({isOver}) => isOver ? \"red\" : \"transparent\"};\r\n    border-width: 1px;\r\n    border-style: solid;\r\n  }\r\n`;\r\n\r\nconst StarView = ({ star }) => {\r\n   // console.log(star.parent);\r\n   const parent = star.parent;\r\n\r\n  const [, m] = usePosition();\r\n  const indent = star.y % 2 ? 0 : 7.75 * m;\r\n  const [{isOver}, dropRef] = useDrop(() => ({\r\n    accept: \"CARD\",\r\n    drop: (item, monitor) => {\r\n      // let a = monitor.getItem();\r\n      // const parent = getParent(item.card, 2);\r\n      // parent.remove(item.card);\r\n      // debugger\r\n      // star.put(item.card, name);\r\n\r\n      return {\r\n        place: star,\r\n      };\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }), [star.x, star.y]);\r\n\r\n  return (\r\n    <View ref={dropRef} className={\"Star\"} left={star.x * m * 15.5 + indent} top={star.y * m * 13.4 + m}>\r\n      <OverView className=\"hexagon\" isOver={isOver}>\r\n        <span><div className=\"inner lni lni-sun\"/></span>\r\n      </OverView>\r\n\r\n      <CardViewer card={star.base(0)} y={3} x={0} parent={parent}/>\r\n      <CardViewer card={star.base(1)} y={4} x={0} parent={parent}/>\r\n      <CardViewer card={star.base(2)} y={5} x={0} parent={parent}/>\r\n\r\n      <CardViewer card={star.ship(0)} y={6} x={0} parent={parent}/>\r\n      <CardViewer card={star.ship(1)} y={6} x={1} parent={parent}/>\r\n      <CardViewer card={star.ship(2)} y={6} x={2} parent={parent}/>\r\n      <CardViewer card={star.ship(3)} y={6} x={2} parent={parent}/>\r\n\r\n      <CardViewer card={star.colony(0)} y={3} x={8} parent={parent}/>\r\n      <CardViewer card={star.colony(1)} y={4} x={8} parent={parent}/>\r\n      <CardViewer card={star.colony(2)} y={5} x={8} parent={parent}/>\r\n\r\n      <CardViewer card={star.hero(0)} y={7} x={7} parent={parent}/>\r\n      <CardViewer card={star.hero(1)} y={8} x={7} parent={parent}/>\r\n      <CardViewer card={star.hero(2)} y={9} x={7} parent={parent}/>\r\n      <CardViewer card={star.hero(3)} y={10} x={7} parent={parent}/>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CardViewer = ({ card, y, x, parent }) => {\r\n      console.log(card);\r\n\r\n  if (card.isAbsent) {\r\n    return \"\";\r\n  }\r\n\r\n  return (\r\n    <CardView card={card} y={y} x={x} parent={parent}/>\r\n  );\r\n};\r\n\r\n// const SlotView = styled.div`\r\n//   position: absolute;\r\n//   border-width: 2px;\r\n//   border-style: solid;\r\n//   border-color: ${({isOver}) => isOver ? \"red\" : \"transparent\"};\r\n//   top: ${({y}) => y + \"px\"};\r\n//   left: ${({x}) => x + \"px\"};\r\n//   z-index: 2;\r\n//   border-radius: 20px;\r\n// `;\r\n//\r\n// const Slot = ({name, star, y, x}) => {\r\n//   const [p] = usePosition(y, x);\r\n//   const [{isOver}, dropRef] = useDrop(() => ({\r\n//     accept: \"CARD\",\r\n//     drop: (item, monitor) => {\r\n//       let a = monitor.getItem();\r\n//       // const parent = getParent(item.card, 2);\r\n//       // parent.remove(item.card);\r\n//       // debugger\r\n//       // star.put(item.card, name);\r\n//\r\n//       return {\r\n//         place: star,\r\n//         name: name,\r\n//       };\r\n//     },\r\n//     collect: monitor => ({\r\n//       isOver: !!monitor.isOver(),\r\n//     }),\r\n//   }), [x, y]);\r\n//\r\n//   return (\r\n//     <SlotView ref={dropRef} className={name} y={p.y - 94} x={18 + p.x} isOver={isOver}/>\r\n//   );\r\n// };\r\n\r\nexport default observer(StarView);\r\n"]},"metadata":{},"sourceType":"module"}