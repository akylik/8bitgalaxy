{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a_kyl\\\\Documents\\\\GitHub\\\\8bitgalaxy\\\\src\\\\components\\\\ui\\\\PileView.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport cn from \"classnames\";\nimport { useDrop } from \"react-dnd\";\nimport { observer } from \"mobx-react-lite\";\nimport CardView from \"./CardView\";\nimport usePosition from \"../../state/hooks/usePosition\";\nimport useHover from \"../../state/hooks/useHover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PileView({\n  pile,\n  y,\n  x\n}) {\n  _s();\n\n  const [p] = usePosition(y, x);\n  const [hoverRef, isHover] = useHover();\n  const [{\n    isOver\n  }, dropRef] = useDrop(() => ({\n    accept: \"CARD\",\n    drop: (item, monitor) => {\n      // const parent = getParent(item.card, 2);\n      // parent.remove(item.card);\n      console.log(item.card.destination);\n\n      if (item.card.destination.contains('pile')) {\n        console.log(true);\n      }\n\n      item.card.destination.removeCard(item.card);\n      pile.put(item.card);\n      const destanation = item.card.destination;\n      return {\n        place: pile\n      };\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }), [x, y]);\n  const turnedCards = pile.cards.filter(card => !card.isTurned);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    className: cn(\"Pile\", pile.direction.name),\n    style: {\n      left: p.x + \"px\",\n      top: p.y + \"px\",\n      backgroundColor: isOver ? \"red\" : \"inherit\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: hoverRef,\n      children: [pile.cards.map((card, idx) => {\n        let indentY = 0.2;\n        let indentX = 0.2;\n\n        if (!card.isTurned && isHover && turnedCards.length > 1) {\n          indentY = pile.direction.name === \"LeftToRight\" ? 0.8 : 0.2;\n          indentX = pile.direction.name === \"TopToBottom\" ? 0.8 : 0.2;\n        }\n\n        return /*#__PURE__*/_jsxDEV(CardView, {\n          card: card,\n          y: idx * indentY,\n          x: idx * indentX\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      }), isOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: pile.top ? pile.top.Type : \"Ship\",\n        style: {\n          position: \"absolute\",\n          zIndex: 1,\n          opacity: 0.5,\n          backgroundColor: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PileView, \"c1D9X0+PyY3Bw71uymkavHz9/ag=\", false, function () {\n  return [usePosition, useHover, useDrop];\n});\n\n_c = PileView;\nexport default _c2 = observer(PileView);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PileView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/components/ui/PileView.js"],"names":["React","cn","useDrop","observer","CardView","usePosition","useHover","PileView","pile","y","x","p","hoverRef","isHover","isOver","dropRef","accept","drop","item","monitor","console","log","card","destination","contains","removeCard","put","destanation","place","collect","turnedCards","cards","filter","isTurned","direction","name","left","top","backgroundColor","map","idx","indentY","indentX","length","Type","position","zIndex","opacity"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport CardView from \"./CardView\";\r\nimport usePosition from \"../../state/hooks/usePosition\";\r\nimport useHover from \"../../state/hooks/useHover\";\r\n\r\nfunction PileView({pile, y, x}) {\r\n  const [p] = usePosition(y, x);\r\n  const [hoverRef, isHover] = useHover();\r\n  const [{isOver}, dropRef] = useDrop(() => ({\r\n    accept: \"CARD\",\r\n    drop: (item, monitor) => {\r\n      // const parent = getParent(item.card, 2);\r\n      // parent.remove(item.card);\r\n      console.log(item.card.destination)\r\n      if(item.card.destination.contains('pile')) {console.log(true)}\r\n      item.card.destination.removeCard(item.card);\r\n      pile.put(item.card);\r\n      const destanation = item.card.destination;\r\n      return {\r\n        place: pile,\r\n      };\r\n    },\r\n    collect: monitor => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  }), [x, y]);\r\n  const turnedCards = pile.cards.filter(card => !card.isTurned);\r\n\r\n  return (\r\n    <div\r\n      ref={dropRef}\r\n      className={cn(\"Pile\", pile.direction.name)}\r\n      style={{left: p.x + \"px\", top: p.y + \"px\", backgroundColor: isOver ? \"red\" : \"inherit\"}}\r\n    >\r\n      <div ref={hoverRef}>\r\n        {pile.cards.map((card, idx) => {\r\n          let indentY = 0.2;\r\n          let indentX = 0.2;\r\n          if (!card.isTurned && isHover && turnedCards.length > 1) {\r\n            indentY = pile.direction.name === \"LeftToRight\" ? 0.8 : 0.2;\r\n            indentX = pile.direction.name === \"TopToBottom\" ? 0.8 : 0.2;\r\n          }\r\n          return (\r\n            <CardView key={idx} card={card} y={idx * indentY} x={idx * indentX}/>\r\n          );\r\n        })}\r\n        {isOver && (\r\n          <div\r\n            className={pile.top ? pile.top.Type : \"Ship\"}\r\n            style={{\r\n              position: \"absolute\",\r\n              zIndex: 1,\r\n              opacity: 0.5,\r\n              backgroundColor: \"red\",\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(PileView);\r\n"]},"metadata":{},"sourceType":"module"}