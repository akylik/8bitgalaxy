{"ast":null,"code":"import Prop from \"./Prop.js\";\nimport Spec from \"./Spec.js\";\nimport aCard from \"./aCard.js\";\nimport Specs from \"./Specs.js\";\nimport Action from \"./Action.js\";\nimport Assert from \"./Assert.js\";\nimport Generator from \"./Generator.js\";\n\nclass Decks {\n  static get(name) {\n    let all = Decks.all();\n    let specs = all[name.toLowerCase()];\n    let ps = Decks.parseCard(name, specs);\n    return new Specs(Decks.parseCard(name, specs));\n  }\n\n  static getCard(name) {\n    return new aCard(Decks.get(name));\n  }\n\n  static all() {\n    if (Decks._all === undefined) {\n      Decks._all = new Generator().all();\n    }\n\n    return Decks._all;\n  }\n\n  static parseCard(name, specs) {\n    let type = typeof specs;\n    let res = Decks.parseName(name);\n\n    if (!specs) {\n      return res;\n    }\n\n    if (type === 'object') {\n      return res.setSpecs(specs);\n    }\n\n    if (type === 'string') {\n      return res.setSpecs(Decks.parseSpecs(specs));\n    }\n\n    Assert.error('wrong card specs', specs);\n  }\n\n  static parseName(name) {\n    if (!name.includes('-')) {\n      return new Specs(Spec.text(Prop.Name, name));\n    }\n\n    let ps = name.split('-');\n    let action = Action.assert(ps[2]);\n    return new Specs({\n      [Prop.Name]: name,\n      [Prop.Race]: Action.text(ps[0]),\n      [Prop.Type]: Action.text(ps[1]),\n      [Prop.Level]: action,\n      [action.Klass.name]: action.dec()\n    });\n  }\n\n  static parseSpecs(specs) {\n    let ps = specs.split(',');\n    let res = new Specs();\n    ps.forEach(value => res.setSpec(Decks.parseSpec(value)));\n    return res;\n  }\n\n  static parseSpec(spec) {\n    Assert.string(spec);\n    let prefix = spec.charAt(0).toLowerCase();\n    let action = Action.assert(spec.substring(1, 3));\n\n    if (spec.length === 2) {\n      action = Action.assert(spec);\n      return new Spec(action.Klass, action);\n    }\n\n    if (prefix === 'u') {\n      return new Spec(Prop.Utilization, action);\n    }\n\n    if (prefix === 'c') {\n      return new Spec(Prop.Cooperation, action);\n    }\n\n    if (prefix === 'a') {\n      return new Spec(Prop.Alternative, action);\n    }\n\n    if (prefix === 'r') {\n      return new Spec(Prop.Requires, action);\n    }\n\n    Assert.error('wrong spec', spec);\n  }\n\n  static old_all() {\n    let src = Decks.allAnyCase();\n    return Object.keys(src).reduce(function (dst, key) {\n      dst[key.toLowerCase()] = src[key];\n      return dst;\n    }, {});\n  }\n\n  static allAnyCase() {\n    return {\n      'AI-Hero-1s': '',\n      'AI-Hero-2s': '1s,a1p',\n      'AI-Hero-2a': '2a,a1p',\n      'AI-Ship-2a': 'c1a,u2s',\n      'AI-Base-7a': 'u5p,r6c,r7a',\n      'AI-Base-7c': 'u5p,c2c,r6p,r7c',\n      'AI-Base-6c': 'a5p,r5a,r6c',\n      'AI-Colony-4p': 'c2p,a3s,r3c,r4p',\n      'Human-Ship-1a': '',\n      'Human-Ship-1c': '',\n      'Human-Ship-1s': '',\n      'Human-Ship-1p': '',\n      'Human-Ship-2a': '1a,c1a',\n      'Human-Ship-2c': '1c,c1c',\n      'Human-Ship-2s': '1s,c1s',\n      'Human-Ship-2p': '1p,c1p',\n      'Human-Ship-3a': 'a4p',\n      'Human-Ship-3c': 'a4a',\n      'Human-Ship-3s': 'a4c',\n      'Human-Ship-3p': 'a4s',\n      'Human-Ship-4a': 'c2a,a3c,r3c,r4a',\n      'Human-Ship-4c': 'c2c,a3s,r3s,r4c',\n      'Human-Ship-4s': 'c2s,a3p,r3p,r4s',\n      'Human-Ship-4p': 'c2p,a3a,r3a,r4p',\n      'Human-Hero-1a': 'a2a',\n      'Human-Hero-1c': 'a2c',\n      'Human-Hero-1s': 'a2s',\n      'Human-Hero-1p': 'a2p',\n      'Human-Hero-2a': 'a1a',\n      'Human-Hero-2c': 'a1c',\n      'Human-Hero-2s': 'a1s',\n      'Human-Hero-2p': 'a1p',\n      'Human-Hero-3a': '3a,a4a',\n      'Human-Hero-3c': '3c,a4c',\n      'Human-Hero-3s': '3s,a4s',\n      'Human-Hero-3p': '3p,a4p',\n      'Human-Hero-4a': '4a,a3a,r3c,r3a',\n      'Human-Hero-4c': '4c,a3c,r3s,r3c',\n      'Human-Hero-4s': '4s,a3s,r3p,r3s',\n      'Human-Hero-4p': '4p,a3p,r3a,r3p',\n      'Human-Base-3a': 'c1a',\n      'Human-Base-3c': 'c1c,a2p',\n      'Human-Base-3s': 'c1s,u4c',\n      'Human-Base-3p': 'c1p',\n      'Human-Base-5a': 'c3a,a6c',\n      'Human-Base-5c': 'c3c,a6s',\n      'Human-Base-5s': 'c3s,a6p',\n      'Human-Base-5p': 'c3p,a6a',\n      'Human-Base-6a': 'c3a,a5p,r5p,r6a',\n      'Human-Base-6c': 'c3c,a5a,r5a,r6c',\n      'Human-Base-6s': 'c3s,a5c,r5c,r6s',\n      'Human-Base-6p': 'c3p,a5s,r5s,r6p',\n      'Human-Base-7a': 'u5p,r6p,r7a',\n      'Human-Base-7c': 'u5p,c2c',\n      'Human-Colony-3a': '2a,a3c',\n      'Human-Colony-3c': '2c,u3s',\n      'Human-Colony-3s': '2s',\n      'Human-Colony-3p': '2p,a3s,r3c,r4p',\n      'Human-Colony-4a': 'c2a,a3c',\n      'Human-Colony-4c': 'c2c,u3s',\n      'Human-Colony-4s': 'c2s,u3p',\n      'Human-Colony-4p': '3p,c2p,a3c,r3a,r4p',\n      'Human-Colony-5s': 'a4p',\n      'Human-Colony-6a': '5s,c3a,r5s,r6a',\n      'Human-Colony-6c': '5p,c3c,r5p,r6c',\n      'Human-Colony-6s': '5a,c3s,r5a,r6s',\n      'Human-Colony-6p': '5c,c3p,r5c,r6p',\n      'Human-Colony-7a': '5a,3s,c3a,r6s,r7a',\n      'Human-Colony-7c': '5c,3p,c3c,r6p,r7c',\n      'Human-Colony-7s': '5s,3a,c3s,r6a,r7s',\n      'Human-Colony-7p': '5p,3c,c3p,r6c,r7p',\n      'Human-Colony-8a': '6a,4s,c4a,r7s,r8a',\n      'Human-Colony-8c': '6c,4p,c4c,r7p,r8c',\n      'Human-Colony-8s': '6s,4a,c4s,r7a,r8s',\n      'Human-Colony-8p': '6p,4c,c4p,r7c,r8p',\n      'Human-Tech-4a': 'r3s,r3a',\n      'Human-Tech-4c': 'r3p,r3c',\n      'Human-Tech-4s': 'r3a,r3s',\n      'Human-Tech-4p': 'r3c,r3p',\n      'Human-Tech-5a': 'r4s,r4a',\n      'Human-Tech-5c': 'r4p,r4c',\n      'Human-Tech-5s': 'r4a,r4s',\n      'Human-Tech-5p': 'r4c,r4p',\n      'Base': {\n        Type: 'Base'\n      },\n      'Hero': {\n        Type: 'Hero'\n      },\n      'Ship': {\n        Type: 'Ship'\n      },\n      'Colony': {\n        Type: 'Colony'\n      },\n      'Missions': {\n        Type: 'Other'\n      },\n      'Assets': {\n        Type: 'Other'\n      },\n      'Techs': {\n        Type: 'Other'\n      },\n      'Hand': {\n        Type: 'Other'\n      },\n      'Reserve': {\n        Type: 'Other'\n      },\n      'Discard': {\n        Type: 'Other'\n      },\n      'Scrap': {\n        Type: 'Other'\n      },\n      'Factory': {\n        Type: 'Other'\n      },\n      'Research': {\n        Type: 'Other',\n        Name: 'R & D'\n      },\n      'Ideas': {\n        Type: 'Other',\n        Name: 'Deck'\n      }\n    };\n  }\n\n}\n\nDecks._all = undefined;\nexport default Decks;","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/Model/Decks.js"],"names":["Prop","Spec","aCard","Specs","Action","Assert","Generator","Decks","get","name","all","specs","toLowerCase","ps","parseCard","getCard","_all","undefined","type","res","parseName","setSpecs","parseSpecs","error","includes","text","Name","split","action","assert","Race","Type","Level","Klass","dec","forEach","value","setSpec","parseSpec","spec","string","prefix","charAt","substring","length","Utilization","Cooperation","Alternative","Requires","old_all","src","allAnyCase","Object","keys","reduce","dst","key"],"mappings":"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","sourcesContent":["import Prop from \"./Prop.js\";\r\nimport Spec from \"./Spec.js\";\r\nimport aCard from \"./aCard.js\";\r\nimport Specs from \"./Specs.js\";\r\nimport Action from \"./Action.js\";\r\nimport Assert from \"./Assert.js\";\r\nimport Generator from \"./Generator.js\";\r\n\r\nclass Decks {\r\n  static get(name) {\r\n    let all = Decks.all();\r\n    let specs = all[name.toLowerCase()];\r\n    let ps = Decks.parseCard(name, specs);\r\n    return new Specs(Decks.parseCard(name, specs));\r\n  }\r\n\r\n  static getCard(name) {\r\n    return new aCard(Decks.get(name));\r\n  }\r\n\r\n  static _all = undefined;\r\n  static all() {\r\n    if (Decks._all === undefined) {\r\n      Decks._all = (new Generator().all());\r\n    }\r\n    return Decks._all;\r\n  }\r\n\r\n  static parseCard(name, specs) {\r\n    let type = typeof(specs);\r\n    let res = Decks.parseName(name);\r\n    if (!specs) {\r\n      return res;\r\n    }\r\n    if (type === 'object') {\r\n      return res.setSpecs(specs);\r\n    }\r\n    if (type === 'string') {\r\n      return res.setSpecs(Decks.parseSpecs(specs));\r\n    }\r\n    Assert.error('wrong card specs', specs);\r\n  }\r\n\r\n  static parseName(name) {\r\n    if (!name.includes('-')) {\r\n      return new Specs(Spec.text(Prop.Name, name));\r\n    }\r\n    let ps = name.split('-');\r\n    let action = Action.assert(ps[2]);\r\n    return new Specs({\r\n      [Prop.Name]:          name,\r\n      [Prop.Race]:          Action.text(ps[0]),\r\n      [Prop.Type]:          Action.text(ps[1]),\r\n      [Prop.Level]:         action,\r\n      [action.Klass.name]:  action.dec(),\r\n    });\r\n  }\r\n\r\n  static parseSpecs(specs) {\r\n    let ps = specs.split(',');\r\n    let res = new Specs();\r\n    ps.forEach(value => res.setSpec(Decks.parseSpec(value)));\r\n    return res;\r\n  }\r\n\r\n  static parseSpec(spec) {\r\n    Assert.string(spec);\r\n    let prefix = spec.charAt(0).toLowerCase();\r\n    let action = Action.assert(spec.substring(1, 3));\r\n    if (spec.length === 2) {\r\n      action = Action.assert(spec);\r\n      return new Spec(action.Klass, action);\r\n    }\r\n    if (prefix === 'u') {\r\n      return new Spec(Prop.Utilization, action);\r\n    }\r\n    if (prefix === 'c') {\r\n      return new Spec(Prop.Cooperation, action);\r\n    }\r\n    if (prefix === 'a') {\r\n      return new Spec(Prop.Alternative, action);\r\n    }\r\n    if (prefix === 'r') {\r\n      return new Spec(Prop.Requires, action);\r\n    }\r\n    Assert.error('wrong spec', spec);\r\n  }\r\n\r\n  static old_all() {\r\n    let src = Decks.allAnyCase();\r\n    return Object.keys(src).reduce(function (dst, key) {\r\n      dst[key.toLowerCase()] = src[key];\r\n      return dst;\r\n    }, {});\r\n  }\r\n\r\n  static allAnyCase() {\r\n    return {\r\n      'AI-Hero-1s':         '',\r\n      'AI-Hero-2s':         '1s,a1p',\r\n      'AI-Hero-2a':         '2a,a1p',\r\n      'AI-Ship-2a':         'c1a,u2s',\r\n      'AI-Base-7a':         'u5p,r6c,r7a',\r\n      'AI-Base-7c':         'u5p,c2c,r6p,r7c',\r\n      'AI-Base-6c':         'a5p,r5a,r6c',\r\n      'AI-Colony-4p':       'c2p,a3s,r3c,r4p',\r\n\r\n      'Human-Ship-1a':      '',\r\n      'Human-Ship-1c':      '',\r\n      'Human-Ship-1s':      '',\r\n      'Human-Ship-1p':      '',\r\n\r\n      'Human-Ship-2a':      '1a,c1a',\r\n      'Human-Ship-2c':      '1c,c1c',\r\n      'Human-Ship-2s':      '1s,c1s',\r\n      'Human-Ship-2p':      '1p,c1p',\r\n\r\n      'Human-Ship-3a':      'a4p',\r\n      'Human-Ship-3c':      'a4a',\r\n      'Human-Ship-3s':      'a4c',\r\n      'Human-Ship-3p':      'a4s',\r\n\r\n      'Human-Ship-4a':      'c2a,a3c,r3c,r4a',\r\n      'Human-Ship-4c':      'c2c,a3s,r3s,r4c',\r\n      'Human-Ship-4s':      'c2s,a3p,r3p,r4s',\r\n      'Human-Ship-4p':      'c2p,a3a,r3a,r4p',\r\n\r\n      'Human-Hero-1a':      'a2a',\r\n      'Human-Hero-1c':      'a2c',\r\n      'Human-Hero-1s':      'a2s',\r\n      'Human-Hero-1p':      'a2p',\r\n\r\n      'Human-Hero-2a':      'a1a',\r\n      'Human-Hero-2c':      'a1c',\r\n      'Human-Hero-2s':      'a1s',\r\n      'Human-Hero-2p':      'a1p',\r\n\r\n      'Human-Hero-3a':      '3a,a4a',\r\n      'Human-Hero-3c':      '3c,a4c',\r\n      'Human-Hero-3s':      '3s,a4s',\r\n      'Human-Hero-3p':      '3p,a4p',\r\n\r\n      'Human-Hero-4a':      '4a,a3a,r3c,r3a',\r\n      'Human-Hero-4c':      '4c,a3c,r3s,r3c',\r\n      'Human-Hero-4s':      '4s,a3s,r3p,r3s',\r\n      'Human-Hero-4p':      '4p,a3p,r3a,r3p',\r\n\r\n      'Human-Base-3a':      'c1a',\r\n      'Human-Base-3c':      'c1c,a2p',\r\n      'Human-Base-3s':      'c1s,u4c',\r\n      'Human-Base-3p':      'c1p',\r\n\r\n      'Human-Base-5a':      'c3a,a6c',\r\n      'Human-Base-5c':      'c3c,a6s',\r\n      'Human-Base-5s':      'c3s,a6p',\r\n      'Human-Base-5p':      'c3p,a6a',\r\n\r\n      'Human-Base-6a':      'c3a,a5p,r5p,r6a',\r\n      'Human-Base-6c':      'c3c,a5a,r5a,r6c',\r\n      'Human-Base-6s':      'c3s,a5c,r5c,r6s',\r\n      'Human-Base-6p':      'c3p,a5s,r5s,r6p',\r\n\r\n      'Human-Base-7a':      'u5p,r6p,r7a',\r\n      'Human-Base-7c':      'u5p,c2c',\r\n\r\n      'Human-Colony-3a':    '2a,a3c',\r\n      'Human-Colony-3c':    '2c,u3s',\r\n      'Human-Colony-3s':    '2s',\r\n      'Human-Colony-3p':    '2p,a3s,r3c,r4p',\r\n\r\n      'Human-Colony-4a':    'c2a,a3c',\r\n      'Human-Colony-4c':    'c2c,u3s',\r\n      'Human-Colony-4s':    'c2s,u3p',\r\n      'Human-Colony-4p':    '3p,c2p,a3c,r3a,r4p',\r\n\r\n      'Human-Colony-5s':    'a4p',\r\n\r\n      'Human-Colony-6a':    '5s,c3a,r5s,r6a',\r\n      'Human-Colony-6c':    '5p,c3c,r5p,r6c',\r\n      'Human-Colony-6s':    '5a,c3s,r5a,r6s',\r\n      'Human-Colony-6p':    '5c,c3p,r5c,r6p',\r\n\r\n      'Human-Colony-7a':    '5a,3s,c3a,r6s,r7a',\r\n      'Human-Colony-7c':    '5c,3p,c3c,r6p,r7c',\r\n      'Human-Colony-7s':    '5s,3a,c3s,r6a,r7s',\r\n      'Human-Colony-7p':    '5p,3c,c3p,r6c,r7p',\r\n\r\n      'Human-Colony-8a':    '6a,4s,c4a,r7s,r8a',\r\n      'Human-Colony-8c':    '6c,4p,c4c,r7p,r8c',\r\n      'Human-Colony-8s':    '6s,4a,c4s,r7a,r8s',\r\n      'Human-Colony-8p':    '6p,4c,c4p,r7c,r8p',\r\n\r\n      'Human-Tech-4a':      'r3s,r3a',\r\n      'Human-Tech-4c':      'r3p,r3c',\r\n      'Human-Tech-4s':      'r3a,r3s',\r\n      'Human-Tech-4p':      'r3c,r3p',\r\n\r\n      'Human-Tech-5a':      'r4s,r4a',\r\n      'Human-Tech-5c':      'r4p,r4c',\r\n      'Human-Tech-5s':      'r4a,r4s',\r\n      'Human-Tech-5p':      'r4c,r4p',\r\n\r\n      'Base':               { Type: 'Base', },\r\n      'Hero':               { Type: 'Hero', },\r\n      'Ship':               { Type: 'Ship', },\r\n      'Colony':             { Type: 'Colony', },\r\n\r\n      'Missions':           { Type: 'Other' },\r\n      'Assets':             { Type: 'Other' },\r\n      'Techs':              { Type: 'Other' },\r\n      'Hand':               { Type: 'Other' },\r\n      'Reserve':            { Type: 'Other' },\r\n      'Discard':            { Type: 'Other' },\r\n      'Scrap':              { Type: 'Other' },\r\n      'Factory':            { Type: 'Other' },\r\n      'Research':           { Type: 'Other', Name: 'R & D' },\r\n      'Ideas':              { Type: 'Other', Name: 'Deck' },\r\n    }\r\n  }\r\n}\r\n\r\nexport default Decks;\r\n"]},"metadata":{},"sourceType":"module"}