{"ast":null,"code":"import Prop from \"./Prop.js\";\nimport Spec from \"./Spec.js\";\nimport Action from \"./Action.js\";\nimport Assert from \"./Assert.js\";\n\nclass Specs {\n  constructor(specs) {\n    this._specs = {};\n\n    if (specs) {\n      this.setSpecs(specs);\n    }\n  }\n\n  get Specs() {\n    return this._specs;\n  }\n\n  get Name() {\n    return this.getValue(Prop.Name);\n  }\n\n  get Type() {\n    return this.getValue(Prop.Type);\n  }\n\n  get Race() {\n    return this.getValue(Prop.Race);\n  }\n\n  get Level() {\n    return this.getValue(Prop.Level, 0);\n  }\n\n  get Klass() {\n    return this.getValue(Prop.Klass);\n  }\n\n  get Requires() {\n    return this.getValue(Prop.Requires);\n  }\n\n  get Defense() {\n    return this.getValue(Prop.Defense, this.getValue(Prop.Level));\n  }\n\n  get Attack() {\n    return this.getValue(Prop.Attack, 0);\n  }\n\n  get Colonization() {\n    return this.getValue(Prop.Colonization, 0);\n  }\n\n  get Science() {\n    return this.getValue(Prop.Science, 0);\n  }\n\n  get Production() {\n    return this.getValue(Prop.Production, 0);\n  }\n\n  get Cooperation() {\n    return this.getValue(Prop.Cooperation);\n  }\n\n  get Alternative() {\n    return this.getValue(Prop.Alternative);\n  }\n\n  get Utilization() {\n    return this.getValue(Prop.Utilization);\n  }\n\n  getValue(prop, def = null) {\n    let action = this.getAction(prop);\n\n    if (action === undefined) {\n      return def;\n    }\n\n    Action.assert(action);\n    return action.Value;\n  }\n\n  getAction(prop) {\n    return this._specs[Prop.assert(prop).name];\n  }\n\n  getSpec(prop) {\n    let action = this.getAction(prop);\n    return action ? new Spec(prop, action) : null;\n  }\n\n  setSpec(spec) {\n    spec = Spec.assert(spec);\n    this._specs[spec.name] = spec.Action;\n    return this.setSpecial(spec);\n  }\n\n  setSpecial(spec) {\n    if (spec.name === Prop.Level) {\n      this._specs[Prop.Klass] = new Action(spec.Action.Klass, spec.Action.Klass.name);\n    }\n\n    if (spec.name === Prop.Requires) {\n      let name = this._specs[Prop.Require1] ? Prop.Require2 : Prop.Require1;\n      this._specs[name] = spec.Action;\n    }\n\n    return this;\n  }\n\n  setSpecs(specs) {\n    if (specs instanceof Spec) {\n      return this.setSpec(specs);\n    }\n\n    if (specs instanceof Specs) {\n      return this.setSpecs(specs._specs);\n    }\n\n    if (typeof specs === 'object') {\n      for (const [name, action] of Object.entries(specs)) {\n        this.setSpec(new Spec(name, action));\n      }\n\n      return this;\n    }\n\n    Assert.error('wrong Specs', specs);\n  }\n\n  getSpecs() {\n    let specs = {};\n\n    for (const [prop, action] of Object.entries(this._specs)) {\n      specs[prop] = new Spec(prop, action);\n    }\n\n    return specs;\n  }\n\n  static assert(sample) {\n    if (sample instanceof Specs) {\n      return sample;\n    }\n\n    return new Specs().setSpecs(sample);\n  }\n\n}\n\nexport default Specs;","map":{"version":3,"sources":["C:/Users/a_kyl/Documents/GitHub/8bitgalaxy/src/Model/Specs.js"],"names":["Prop","Spec","Action","Assert","Specs","constructor","specs","_specs","setSpecs","Name","getValue","Type","Race","Level","Klass","Requires","Defense","Attack","Colonization","Science","Production","Cooperation","Alternative","Utilization","prop","def","action","getAction","undefined","assert","Value","name","getSpec","setSpec","spec","setSpecial","Require1","Require2","Object","entries","error","getSpecs","sample"],"mappings":"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","sourcesContent":["import Prop from \"./Prop.js\";\r\nimport Spec from \"./Spec.js\";\r\nimport Action from \"./Action.js\";\r\nimport Assert from \"./Assert.js\";\r\n\r\nclass Specs {\r\n  constructor(specs) {\r\n    this._specs = {};\r\n    if (specs) {\r\n      this.setSpecs(specs);\r\n    }\r\n  }\r\n\r\n  get Specs()             { return this._specs; }\r\n  get Name()              { return this.getValue(Prop.Name); }\r\n  get Type()              { return this.getValue(Prop.Type); }\r\n  get Race()              { return this.getValue(Prop.Race); }\r\n  get Level()             { return this.getValue(Prop.Level, 0); }\r\n  get Klass()             { return this.getValue(Prop.Klass); }\r\n  get Requires()          { return this.getValue(Prop.Requires); }\r\n  get Defense()           { return this.getValue(Prop.Defense, this.getValue(Prop.Level)); }\r\n  get Attack()            { return this.getValue(Prop.Attack, 0); }\r\n  get Colonization()      { return this.getValue(Prop.Colonization, 0); }\r\n  get Science()           { return this.getValue(Prop.Science, 0); }\r\n  get Production()        { return this.getValue(Prop.Production, 0); }\r\n  get Cooperation()       { return this.getValue(Prop.Cooperation); }\r\n  get Alternative()       { return this.getValue(Prop.Alternative); }\r\n  get Utilization()       { return this.getValue(Prop.Utilization); }\r\n\r\n  getValue(prop, def = null) {\r\n    let action = this.getAction(prop);\r\n    if (action === undefined) {\r\n      return def;\r\n    }\r\n    Action.assert(action);\r\n    return action.Value;\r\n  }\r\n\r\n  getAction(prop) {\r\n    return this._specs[Prop.assert(prop).name];\r\n  }\r\n\r\n  getSpec(prop) {\r\n    let action = this.getAction(prop);\r\n    return action ? new Spec(prop, action) : null;\r\n  }\r\n\r\n  setSpec(spec) {\r\n    spec = Spec.assert(spec);\r\n    this._specs[spec.name] = spec.Action;\r\n    return this.setSpecial(spec);\r\n  }\r\n\r\n  setSpecial(spec) {\r\n    if (spec.name === Prop.Level) {\r\n      this._specs[Prop.Klass] = new Action(spec.Action.Klass, spec.Action.Klass.name);\r\n    }\r\n    if (spec.name === Prop.Requires) {\r\n      let name = this._specs[Prop.Require1] ? Prop.Require2 : Prop.Require1;\r\n      this._specs[name] = spec.Action;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setSpecs(specs) {\r\n    if (specs instanceof Spec) {\r\n      return this.setSpec(specs);\r\n    }\r\n    if (specs instanceof Specs) {\r\n      return this.setSpecs(specs._specs);\r\n    }\r\n    if (typeof(specs) === 'object') {\r\n      for (const [name, action] of Object.entries(specs)) {\r\n        this.setSpec(new Spec(name, action));\r\n      }\r\n      return this;\r\n    }\r\n    Assert.error('wrong Specs', specs);\r\n  }\r\n\r\n  getSpecs() {\r\n    let specs = {};\r\n    for (const [prop, action] of Object.entries(this._specs)) {\r\n      specs[prop] = new Spec(prop, action);\r\n    }\r\n    return specs;\r\n  }\r\n\r\n  static assert(sample) {\r\n    if (sample instanceof(Specs)) {\r\n      return sample;\r\n    }\r\n    return (new Specs()).setSpecs(sample);\r\n  }\r\n}\r\n\r\nexport default Specs;\r\n"]},"metadata":{},"sourceType":"module"}